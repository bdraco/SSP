--- ssp-3.11	2012-08-20 19:57:35.000000000 +0400
+++ ssp-3.12	2012-08-22 20:32:46.000000000 +0400
@@ -20,17 +20,18 @@
 use IO::Socket::INET;
 
 $| = 1;
-my $version = '3.11';
+my $version = '3.12';
 $Term::ANSIColor::AUTORESET = 1;
 
 my $os                  = Cpanel::OSSys::getos();
 my @local_ipaddrs_list  = Cpanel::Ips::Fetch::fetch_ips_array();
 chomp( my %hostinfo     = get_hostinfo() );
 my @process_list        = get_process_list();
-my $apachectl           = '/usr/local/apache/bin/apachectl';
+my $apache_bin          = '/usr/local/apache/bin/httpd';
 my @custom_opt_mods;
 my @usr_local_cpanel_hooks;
 my @easyapache_templates;
+my @rpm_list;
 
 my %cpuinfo;
 if ( $os eq 'freebsd' ) {
@@ -94,7 +95,7 @@
 check_pkgacct_override();
 check_for_gdm();
 check_for_redhat_firewall();
-check_for_apache_update_no_restart();
+check_easyapache();
 check_for_easyapache_hooks();
 check_for_home_noexec();
 check_for_nat();
@@ -111,6 +112,7 @@
 check_for_missing_timezone_from_phpini();
 check_for_proc_mdstat_recovery();
 check_usr_local_cpanel_path_for_symlinks();
+check_for_system_mem_below_512M();
 
 # [3RDP]
 check_for_assp();
@@ -125,9 +127,14 @@
 check_for_1h();
 check_for_webmin();
 
-# This is run last since it has the potential to take the longest
+# This is run closer to the end since it has the potential to take the longest
 print "\n";
+build_rpm_list();
+
+# These require build_rpm_list() to have been run, so that @rpm_list is populated
 check_for_additional_rpms();
+check_mysql_rpm_mismatch();
+check_php_libmysqlclient_mismatch();
 
 sub check_for_dnsonly {
     my $dnsonly;
@@ -179,7 +186,7 @@
     ## better (?) would be to run lsof and check process names on listening ports.
 
     my @process_list;
-    my $process_list = Cpanel::SafeRun::Errors::saferunnoerror( 'ps', 'axwwwf', '-o', 'cmd' );
+    my $process_list = Cpanel::SafeRun::Errors::saferunnoerror( 'ps', 'axwwwf', '-o', 'user,cmd' );
     if ( $process_list ) { 
         @process_list = split /\n/, $process_list;
     }
@@ -485,10 +492,10 @@
 
     my ( $apache_version, $apache_built, $apache_ea_version );
 
-    if ( -x $apachectl ) {
-        my $apachectl_output = Cpanel::SafeRun::Errors::saferunnoerror( $apachectl, '-v' );
-        my @apachectl_output = split /\n/, $apachectl_output;
-        for my $line ( @apachectl_output ) {
+    if ( -x $apache_bin ) {
+        my $apache_bin_output = Cpanel::SafeRun::Errors::saferunnoerror( $apache_bin, '-v' );
+        my @apache_bin_output = split /\n/, $apache_bin_output;
+        for my $line ( @apache_bin_output ) {
             if ( $line =~ m{ \A Server \s version: \s (.*) \z }xms ) {
                 $apache_version = $1;
             }
@@ -513,7 +520,7 @@
     }    
     else {
         print_info( 'Apache Info: ' );
-        print_warning( "$apachectl not executable?" );
+        print_warning( "$apache_bin not executable?" );
     }    
 }
 
@@ -787,7 +794,7 @@
     my $upcp_running = 0;
     
     for my $line ( @process_list ) {
-        if ( $line =~ /upcp/ ) {
+        if ( $line =~ m{ \A root (?:.*) upcp }xms ) {
             $upcp_running = 1;
             last;
         }
@@ -1400,7 +1407,7 @@
     my $gdm = 0; 
 
     for my $line ( @process_list ) {
-        if ( $line =~ /gdm/ ) {
+        if ( $line =~ m{ \A root (?:.*) gdm }xms ) {
             $gdm = 1; 
             last;
         }
@@ -1421,11 +1428,36 @@
     }    
 }
 
-sub check_for_apache_update_no_restart {
-    my $file = '/var/cpanel/mgmt_queue/apache_update_no_restart';
-    if ( -e $file ) {
-        print_warn( 'apache_update_no_restart: ' );
-        print_warning( "$file exists! This will prevent EA from completing successfully." );
+sub check_easyapache {
+    my $ea_is_running_file = '/usr/local/apache/AN_EASYAPACHE_BUILD_IS_CURRENTLY_RUNNING';
+    my $ea_in_process_list = 0; 
+    my $apache_update_no_restart = '/var/cpanel/mgmt_queue/apache_update_no_restart';
+    my $ea_is_running = 0;
+
+    if ( -e $ea_is_running_file ) {
+        for my $process ( @process_list ) {
+            if ( $process =~ m{ \A root (?:.*) easyapache }xms ) {
+                $ea_in_process_list = 1; 
+                last;
+            }
+            else {
+                $ea_in_process_list = 0;
+            }
+        }
+        if ( $ea_in_process_list == 0 ) {
+            print_warn( 'EasyApache: ' );
+            print_warning( "$ea_is_running_file exists, but 'easyapache' not found in process list" );
+        }
+        else {
+            $ea_is_running = 1;
+            print_warn( 'EasyApache: ' );
+            print_warning( 'is running' );
+        }
+    }    
+
+    if ( -e $apache_update_no_restart and $ea_is_running == 0 ) {
+        print_warn( 'EasyApache: ' );
+        print_warning( "$apache_update_no_restart exists! This will prevent EA from completing successfully." );
     }
 }
 
@@ -1759,6 +1791,180 @@
     }
 }
 
+sub check_for_additional_rpms {
+    return if ! @rpm_list;
+
+    my @additional_rpms = grep { /^(php-|kde-|psa-|clamav|clamd|rrdtool-)|(http|apache|pear|sendmail)/ } @rpm_list;
+    if ( @additional_rpms ) {
+        @additional_rpms = sort @additional_rpms;
+        for my $additional_rpm ( @additional_rpms ) {
+            next if ( $additional_rpm =~ /sendmail-(cf|doc|devel)-|httpd-tools/ );
+            print_start( 'Additional RPM: ' );
+            print_warning( $additional_rpm );
+        }
+    }    
+}
+
+sub check_mysql_rpm_mismatch {
+    return if ! @rpm_list;
+
+    ## MySQL version mismatch check
+    my @mysql_rpm_versions;
+
+    for my $rpm ( @rpm_list ) {
+        if ( $rpm =~ m{ \A MySQL-server-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+        elsif ( $rpm =~ m{ \A MySQL-shared-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+        elsif ( $rpm =~ m{ \A MySQL-devel-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+        elsif ( $rpm =~ m{ \A MySQL-client-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+        elsif ( $rpm =~ m{ \A MySQL-test-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+        elsif ( $rpm =~ m{ \A MySQL-embedded-(.*) \z }xms ) {
+            push @mysql_rpm_versions, $1;
+        }
+    }    
+
+    my $first_rpm = pop @mysql_rpm_versions;
+    for ( 1 .. scalar @mysql_rpm_versions ) {
+        my $next_rpm = pop @mysql_rpm_versions;
+        if ( $first_rpm ne $next_rpm ) {
+            print_warn( 'MySQL RPMs: ' );
+            print_warning( 'version mismatch!' );
+            last;
+        }
+    }    
+}
+
+sub check_php_libmysqlclient_mismatch {
+    return if ! @rpm_list;
+
+    my ( @php4_ldd, @php5_ldd );
+    my ( $php4_libmysqlclient_version, $php5_libmysqlclient_version );
+
+    my $php4_binary = '/usr/local/php4/bin/php';
+    my $php5_binary = '/usr/bin/php';
+
+    my $php4_mismatch = 0;
+    my $php5_mismatch = 0;
+    
+    my $mysql_shared_rpm_version_orig;
+    my $mysql_shared_rpm_version;
+
+    ## Get the MySQL-shared rpm major and minor version.
+    for my $rpm ( @rpm_list ) {
+        if ( $rpm =~ /MySQL-shared-(\d)\.(\d)/ ) {
+            $mysql_shared_rpm_version_orig = $rpm;
+            $mysql_shared_rpm_version = $1 . $2;
+            last;
+        }
+    }
+
+    return if ! $mysql_shared_rpm_version;
+
+    ## Run ldd against whichever major php version is active
+    if ( open my $phpconfyaml_fh, '<', '/usr/local/apache/conf/php.conf.yaml' ) {
+        while ( my $line = <$phpconfyaml_fh> ) {
+            if ( $line =~ m{ \A php4: \s (.*) }xms ) {
+                if ( $1 ne 'none' ) {
+                    @php4_ldd = Cpanel::SafeRun::Errors::saferunnoerror( 'ldd', $php4_binary );
+                }
+            }
+            elsif ( $line =~ m{ \A php5: \s (.*) }xms ) {
+                if ( $1 ne 'none' ) {
+                    @php5_ldd = Cpanel::SafeRun::Errors::saferunnoerror( 'ldd', $php5_binary );
+                }
+            }
+        }
+        close $phpconfyaml_fh;
+    }
+
+    ## Get the linked libmysqlclient version
+    if ( @php4_ldd ) {
+        for my $libs ( @php4_ldd ) {
+            if ( $libs =~ m{ \A \s+ libmysqlclient\.so\.(\d+) \s => \s (?:\S+) \s (?:\S+) \z }xms ) {
+                $php4_libmysqlclient_version = $1;
+                last;
+            }
+        }
+    }
+
+    if ( @php5_ldd ) {
+        for my $libs ( @php5_ldd ) {
+            if ( $libs =~ m{ \A \s+ libmysqlclient\.so\.(\d+) \s => \s (?:\S+) \s (?:\S+) \z }xms ) {
+                $php5_libmysqlclient_version = $1;
+                last;
+            }
+        }
+    }
+
+    ## Compare the linked libmysqlclient lib with the MySQL-shared rpm version
+    ##
+    ## libmysqlclient.so.18 = MySQL-shared 5.5
+    ## libmysqlclient.so.16 = MySQL-shared 5.1
+    ## libmysqlclient.so.15 = MySQL-shared 5.0
+
+    if ( $php4_libmysqlclient_version ) {
+        if ( $php4_libmysqlclient_version == 18 and $mysql_shared_rpm_version != 55 ) {
+            $php4_mismatch = 1;
+        }
+        elsif ( $php4_libmysqlclient_version == 16 and $mysql_shared_rpm_version != 51 ) {
+            $php4_mismatch = 1;
+        }
+        elsif ( $php4_libmysqlclient_version == 15 and $mysql_shared_rpm_version != 50 ) {
+            $php4_mismatch = 1;
+        }
+
+        if ( $php4_mismatch == 1 ) {
+            print_warn( 'PHP/libmysqlclient mismatch: ' );
+            print_warning( "$php4_binary linked against libmysqlclient.so.$php4_libmysqlclient_version, but MySQL-shared rpm is $mysql_shared_rpm_version_orig" );
+        }
+    }
+
+    if ( $php5_libmysqlclient_version ) {
+        if ( $php5_libmysqlclient_version == 18 and $mysql_shared_rpm_version != 55 ) {
+            $php5_mismatch = 1;
+        }
+        elsif ( $php5_libmysqlclient_version == 16 and $mysql_shared_rpm_version != 51 ) {
+            $php5_mismatch = 1;
+        }
+        elsif ( $php5_libmysqlclient_version == 15 and $mysql_shared_rpm_version != 50 ) {
+            $php5_mismatch = 1;
+        }
+
+        if ( $php5_mismatch == 1 ) {
+            print_warn( 'PHP/libmysqlclient mismatch: ' );
+            print_warning( "$php5_binary linked against libmysqlclient.so.$php5_libmysqlclient_version, but MySQL-shared rpm is $mysql_shared_rpm_version_orig" );
+        }
+    }
+}
+
+sub check_for_system_mem_below_512M {
+    my $meminfo = '/proc/meminfo';
+    my $memtotal;
+
+    if ( open my $meminfo_fh, '<', $meminfo ) {
+        while ( <$meminfo_fh> ) {
+            if ( m{ \A MemTotal: \s+ (\d+) \s+ kB \s+ \z }xms ) {
+                $memtotal = $1;
+            }
+        }
+        close $meminfo_fh;
+    }
+
+    if ( $memtotal < 524288 ) {
+        print_warn( 'Memory: ' );
+        print_warning( 'Server has less than 512M physical memory!' );
+    }
+}
+
 ##############################
 #  END [WARN] CHECKS
 ##############################
@@ -1882,7 +2088,7 @@
     }
 
     for my $line ( @process_list ) {
-        if ( $line  =~ /lfd/ ) {
+        if ( $line  =~ m{ \A root (?:.*) lfd }xms ) {
             $lfd = 1;
             last;
         }
@@ -1916,8 +2122,8 @@
 
     if ( -d '/usr/local/1h' ) {
         $one_h = 1;
-        if ( -x $apachectl ) {
-            my $apache_modules = Cpanel::SafeRun::Errors::saferunnoerror( $apachectl, '-M' );
+        if ( -x $apache_bin ) {
+            my $apache_modules = Cpanel::SafeRun::Errors::saferunnoerror( $apache_bin, '-M' );
             my @apache_modules = split /\n/, $apache_modules;
             for my $line ( @apache_modules ) {
                 if ( $line =~ /hive/ ) {
@@ -1961,9 +2167,7 @@
 #  END [3RDP] CHECKS
 ##############################
 
-## TODO: run rpm -qa as soon as SSP is run, forked, to speed up overall SSP execution
-## Network checks may benefit from this as well
-sub check_for_additional_rpms {
+sub build_rpm_list {
     return if ( $os eq 'freebsd' );
 
     my $timeout = 15;
@@ -1974,52 +2178,8 @@
         print_warning( 'Additional RPM: check timed out' );
     };
     alarm $timeout;
-    my @rpm_list = Cpanel::SafeRun::Errors::saferunnoerror( 'rpm', '-qa' );
+    @rpm_list = Cpanel::SafeRun::Errors::saferunnoerror( 'rpm', '-qa' );
     alarm 0;
 
-    return if ! @rpm_list;
-
-    my @additional_rpms = grep { /^(php-|kde-|psa-|clamav|clamd|rrdtool-)|(http|apache|pear|sendmail)/ } @rpm_list;
-    if ( @additional_rpms ) {
-        @additional_rpms = sort @additional_rpms;
-        for my $additional_rpm ( @additional_rpms ) {
-            next if ( $additional_rpm =~ /sendmail-(cf|doc|devel)-|httpd-tools/ );
-            print_start( 'Additional RPM: ' );
-            print_warning( $additional_rpm );
-        }
-    }
-
-    ## MySQL version mismatch check
-    my @mysql_rpm_versions;
-
-    for my $rpm ( @rpm_list ) {
-        if ( $rpm =~ m{ \A MySQL-server-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-        elsif ( $rpm =~ m{ \A MySQL-shared-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-        elsif ( $rpm =~ m{ \A MySQL-devel-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-        elsif ( $rpm =~ m{ \A MySQL-client-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-        elsif ( $rpm =~ m{ \A MySQL-test-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-        elsif ( $rpm =~ m{ \A MySQL-embedded-(.*) \z }xms ) {
-            push @mysql_rpm_versions, $1;
-        }
-    }
-
-    my $first_rpm = pop @mysql_rpm_versions;
-    for ( 1 .. scalar @mysql_rpm_versions ) {
-        my $next_rpm = pop @mysql_rpm_versions;
-        if ( $first_rpm ne $next_rpm ) {
-            print_warn( 'MySQL RPMs: ' );
-            print_warning( 'version mismatch!' );
-            last;
-        }
-    }
+    return @rpm_list;
 }
